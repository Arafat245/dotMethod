source ~/.profile

# alias for clang toolchain

# for npm
# Make sure to run
# mkdir "${HOME}/.npm-global"
# npm config set prefix '~/.npm-global'
# to see your current path
# npm config get prefix

# be sure to install dependencies first
# sometimes you need to install webpack from ~/.npm-global/ directories
# npm install -g babel webpack webpack-dev-server

# useful for code style
# pip3 install --user cppman

# fucking shit
stty -ixon

# touch .npmrc
# for more see my .npmrc file
# don't use nvm if you use this approach otherwise it will messed up
# to update npm
NPM_PACKAGES="${HOME}/.npm-global"

PATH="$NPM_PACKAGES/bin:$PATH"

# Unset manpath so we can inherit from /etc/manpath via the `manpath` command
unset MANPATH # delete if you already modified MANPATH elsewhere in your config
export MANPATH="$NPM_PACKAGES/share/man:$(manpath)"

# ref- node-5.9.1 API
alias node="env NODE_NO_READLINE=1 rlwrap node"

# SAmple command
# clang-check -analyze hell.cpp --
alias analyzeCC='clang++ --analyze -std=c++14 -stdlib=libc++ -Xanalyzer -analyzer-output=text'
alias analyzeC='clang --analyze -std=c11 -Xanalyzer -analyzer-output=text'

# valgrind check added
alias valC='valgrind --leak-check=full --show-reachable=yes --track-origins=yes'

alias asshole='unSetting ; defaultSetting'
alias mysql='mysql -u root -p'


alias cxx="clang++ -ggdb3 -O0 -std=c++14 -stdlib=libc++ -lc++abi -Werror -Wself-assign -Wall -pedantic-errors -Wextra-tokens -Wambiguous-member-template -Wbind-to-temporary-copy -fdiagnostics-print-source-range-info -fdiagnostics-show-template-tree -ferror-limit=33 -ftemplate-backtrace-limit=13 -lpthread -l:libmagic.so.1"

alias ccc="clang -ggdb3 -O0 -std=c11 -Wall -Werror -pedantic-errors"

# gcc or g++ compiler
alias gcc="gcc -O0 -g -std=c11 -Wall -Wextra -Wshadow -pedantic -Werror"
# for effective C++ optimization
alias gxx="g++ -O0 -g -std=c++14 -Wall -Wextra -Wshadow -pedantic -Weffc++ -fdiagnostics-color=always -l sqlite3"
alias gxx="g++ -O0 -g -std=c++14 -Wall -Wextra -Wshadow -pedantic -Weffc++ -fdiagnostics-color=always"

# Custom aliases folder dir
alias author="cd ~/Dropbox/FUNProgramming/ehz_notebook"
alias github="cd ~/Dropbox/FUNProgramming/"
# alias apublic="cd ~/vhosts/localhost/public/"
alias metacpp="cd ~/Dropbox/metadata/cppDeitel/Code_Examples"
alias free="free -h"

alias sag="sudo apt-get"
alias update50="pullall"

# my nootbook
alias ehz="vim ~/Dropbox/FUNProgramming/ehz_notebook/ehzNOTEBOOK.md"

# My aliases
alias sqlite="sqlite3"
alias v="vim"
alias t="tmux"
alias vinp="vim --noplugin"
alias vinn="vim -u NONE"
alias c="clear"

# Updating process
alias update='sudo apt-get update'
alias upgrade='sudo apt-get upgrade'
# alias dist-upgrade='sudo apt-get dist-upgrade'

# all at once
alias pullall='update ; upgrade'
alias pullvim='vim -c PlugUpgrade +PlugUpdate'
alias myUpdate='pullall -y ; vim -c PlugUpdate +q +q'
alias housekeeping='sudo apt-get autoclean && sudo apt-get autoremove'

# git command aliases
alias Gadd="git add"
alias Gdiff="git diff"
alias Gshow="git show"
alias Gcommit="git commit"
alias Gstatus="git status"
alias Glog="git log"
alias Gpush="git push"
alias Gpull="git pull"
alias Gstash="git stash"


# custom configuration

# If not running interactively, don't do anything else
[ -z "$PS1" ] && return

PS1='\[\e[0;37m\]\u@\[\e[0;37m\]\h\[\e[0;35m\](\w):\[\e[0m\]$(__git_ps1 "(%s)") '

# If this is an xterm set the title to user@host(dir):
case "$TERM" in
xterm*|rxvt*)
    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
    ;;
*)
    ;;
esac

# # configure prompt tail working directory
# if [ "$PS1" ]; then
#   export PS1="\[\e[0;46m\]\u@\[\e[0;46m\]\h\[\e[0;34m\](\W):\[\e[0m\] "
# fi

# # configure prompt present working directory
# if [ "$PS1" ]; then
#   export PS1="\[\e[0;46m\]\u@\[\e[0;46m\]\h\[\e[0;34m\](\w):\[\e[0m\] "
# fi


 # set umask
umask 0077

# configure man
export MANSECT="3,2,1"

# Warning...Can cause trouble when compile system software

# protect user
alias cp="cp -i"
alias mv="mv -i"
alias rm="rm -i"

# convenience
alias ll="ls -l --color=auto"
alias gdb="gdb -q"

# allow core dumps
ulimit -c unlimited

# set editor
export EDITOR=vim

# linking personalized ~/.bash_profile with ~/.bashrc
if [ -f ~/.bashrc ]; then
   source ~/.bashrc
fi

# git bash completion
if [ -f ~/.git-completion.bash ]; then
  . ~/.git-completion.bash
fi
export CLASSPATH=.:/usr/lib/spl.jar


# determine IP address
function myIP()
{
vmm=
if [ "$vmm" == "xen" ]; then
    # this is EC2, fetch public IP from AWS
    declare inet=$(wget --output-document=- --quiet --timeout=5 --tries=10 http://169.254.169.254/latest/meta-data/public-ipv4)
    declare regex='([0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3})'
else
    # declare inet=$(ip -f inet addr show eth1 2> /dev/null | grep inet)
    declare inet=$(ip -f inet addr show eth0 2> /dev/null | grep inet)
    declare regex='inet ([0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3})'
fi

if [[ "$inet" == "" ]]; then
    declare addr="missing network adapter"
elif [[ "$inet" =~ $regex ]]; then
    declare addr=${BASH_REMATCH[1]}
else
    declare addr="no IP address"
fi

# display IP address
if [ "$1" == "-xml" ]; then
    echo "<tool>IP address</tool>"
    echo "<txt>$addr</txt>"
else
    echo $addr
fi
}

# Run Dropbox indicator
function myDropbox()
{
    bash -c 'export DBUS_SESSION_BUS_ADDRESS="" && dropbox start -i'
}

# open your home directory
function ho()
{
    exo-open --launch FileManager
}

function tl()
{
    exo-open --launch TerminalEmulator
}

# sync with master branch
function gpum()
{
   git pull upstream master
}


#ASAN (address sanitize)
alias asanC='clang -ggdb3 -O0 -std=c11 -fsanitize=address -lpthread'
alias asanCC='clang++ -ggdb3 -O0 -std=c++14 -stdlib=libc++ -lc++abi -fsanitize=address -lpthread'
